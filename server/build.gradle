apply plugin: 'java'


repositories {
    flatDir {
        dirs 'dist/libs'
    }
}

dependencies {
    compile name: 'slf4j-simple-1.7.9'
    compile name: 'slf4j-api-1.7.9'
    compile name: 'netty-all-5.0.0.Alpha1'
    compile name: 'parallelcolt-0.9.4'
    compile name: 'javolution-5.5.1'
    compile name: 'javassist'
    compile name: 'HikariCP-java6-2.2.5'
    runtime name: 'mysql-connector-java'
    compile name: 'gson-2.7'
}

task jarGame(type: Jar) {
    baseName = "gameserver"
    from(sourceSets.main.output) {
        include 'com/a4server/gameserver/**'
        include 'com/a4server/util/**'
        include 'com/a4server/*'
    }

    from('res') {
        include '**'
    }

    manifest {
        attributes 'Implementation-Title': 'Game server',
                'Main-Class': 'com.a4server.gameserver.GameServer'
    }
}

task jarLogin(type: Jar) {
    baseName = "loginserver"
    from(sourceSets.main.output) {
        include 'com/a4server/loginserver/**'
        include 'com/a4server/util/**'
        include 'com/a4server/*'
    }

    manifest {
        attributes 'Implementation-Title': 'Login server',
                'Main-Class': 'com.a4server.loginserver.LoginServer'
    }
}

task jarMapImport(type: Jar) {
    baseName = "mapimport"
    from(sourceSets.main.output) {
        include 'com/a4server/map/**'
    }

    manifest {
        attributes 'Implementation-Title': 'map import',
                'Main-Class': 'com.a4server.map.Importer'
    }
}

build.doLast {
    tasks.afterBuild.execute()
    tasks.jarGame.execute()
    tasks.jarLogin.execute()
    tasks.jarMapImport.execute()
    tasks.makeDist.execute()
}

task afterBuild(dependsOn: build) {
    def distDir = new File('build/dist')
    distDir.mkdirs()
}

task makeDist(type: Sync) {
    dependsOn afterBuild

    from 'dist/'
    into 'build/dist'

    into('game') {
        from('build/libs/') {
            include 'gameserver.jar'
            include 'mapimport.jar'
        }
    }

    into('login') {
        from('build/libs/') {
            include 'loginserver.jar'
        }
    }

    into('game/config') {
        from 'config'
    }
    into('login/config') {
        from 'config'
    }
}

task "rg"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.gameserver.GameServer'
    classpath = sourceSets.main.runtimeClasspath
}

task "rgi"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.gameserver.GameServer'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-initdb']
}

task "rg_map"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.map.Importer'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-m', 'etc/map.bmp', '-sg', '0']
}

task "rl"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.loginserver.LoginServer'
    classpath = sourceSets.main.runtimeClasspath
}