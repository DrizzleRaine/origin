apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7+'
    compile 'org.slf4j:slf4j-log4j12:1.7+'

    compile 'io.netty:netty-all:4.1+'
    compile 'com.google.code.gson:gson:2.8+'
    compile 'com.zaxxer:HikariCP-java7:2.4+'
    runtime 'mysql:mysql-connector-java:5+'
}

def generalManifest = manifest {
    attributes('Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format("yyyy-MM-dd HH:mm:ss"),
            'Implementation-URL': 'http://www.origin-world.com/',
            'Class-Path': configurations.runtime.collect { "../libs/" + it.getName() }.join(' '))
}

task jarGameServer(type: Jar, dependsOn: classes) {
    baseName = "gameserver"
    from(sourceSets.main.output) {
        include 'com/a4server/gameserver/**'
        include 'com/a4server/util/**'
        include 'com/a4server/*'
    }
    from('res') {
        include '**'
    }
    manifest {
        from(generalManifest)
        attributes(
                'Implementation-Title': 'Game server',
                'Main-Class': 'com.a4server.gameserver.GameServer'
        )
    }
}

task jarLoginServer(type: Jar) {
    baseName = "loginserver"
    from(sourceSets.main.output) {
        include 'com/a4server/loginserver/**'
        include 'com/a4server/util/**'
        include 'com/a4server/*'
    }
    from('res') {
        include '**'
    }
    manifest {
        from(generalManifest)
        attributes(
                'Implementation-Title': 'Login server',
                'Main-Class': 'com.a4server.loginserver.LoginServer'
        )
    }
}

task jarMapImporter(type: Jar) {
    baseName = "mapimport"
    from(sourceSets.main.output) {
        include 'com/a4server/map/**'
    }

    manifest {
        from(generalManifest)
        attributes(
                'Implementation-Title': 'Map importer',
                'Main-Class': 'com.a4server.map.Importer'
        )
    }
}

task zip(type: Zip, dependsOn: build) {
    from('dist') {
        exclude('libs')
    }
    into('libs') {
        from(configurations.runtime)
    }
    into('game/config') {
        from('config')
    }
    into('login/config') {
        from('config')
    }
    into('game') {
        from(jarGameServer)
        from(jarMapImporter)
    }
    into('login') {
        from(jarLoginServer)
    }

    def fileName = 'Origin_Server_' + new Date().format("yyyy-MM-dd")
    baseName = fileName
    doLast {
        println 'Built in build/distr/' + fileName + '.zip'
    }
}

build.finalizedBy(zip)

// for debug

// run game server
task "rg"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.gameserver.GameServer'
    classpath = sourceSets.main.runtimeClasspath
}

// run map import into game
task "rg_map"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.map.Importer'
    classpath = sourceSets.main.runtimeClasspath
    args = ['-m', 'etc/map.bmp', '-sg', '0']
}

// run login server
task "rl"(type: JavaExec, dependsOn: [classes]) {
    main = 'com.a4server.loginserver.LoginServer'
    classpath = sourceSets.main.runtimeClasspath
}